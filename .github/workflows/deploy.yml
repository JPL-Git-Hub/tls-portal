name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: the-law-shop-457607
  REGION: us-central1
  SERVICE: tls-portal

jobs:
  deploy-backend:
    name: Deploy Backend to Cloud Run
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Build and Push
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE:$GITHUB_SHA .
        docker push gcr.io/$PROJECT_ID/$SERVICE:$GITHUB_SHA
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE \
          --image gcr.io/$PROJECT_ID/$SERVICE:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --project $PROJECT_ID \
          --allow-unauthenticated \
          --set-env-vars NODE_ENV=production,DOMAIN=portal.thelawshop.com \
          --set-secrets "FIREBASE_SERVICE_ACCOUNT=firebase-service-account:latest"
    
    - name: Update Cloudflare DNS
      run: |
        # Use the existing script that handles everything automatically
        ./scripts/update-cloudflare-dns.sh

  deploy-frontend:
    name: Deploy Frontend to Firebase Hosting
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install -g yarn
        yarn install
    
    - name: Build frontend
      run: |
        cd src/pages
        yarn build
    
    - uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Deploy to Firebase Hosting
      run: |
        npm install -g firebase-tools
        firebase deploy --only hosting --project $PROJECT_ID --non-interactive